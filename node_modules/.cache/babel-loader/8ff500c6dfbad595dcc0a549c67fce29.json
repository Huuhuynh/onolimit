{"ast":null,"code":"import { remove } from '@syncfusion/ej2-base';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { CellType } from '../base/enum';\nimport { uiUpdate, initialEnd, dataReady, modelChanged, refreshAggregates, refreshFooterRenderer, groupAggregates } from '../base/constant';\nimport { FooterRenderer } from '../renderer/footer-renderer';\nimport { SummaryCellRenderer } from '../renderer/summary-cell-renderer';\nimport { GroupSummaryModelGenerator, CaptionSummaryModelGenerator } from '../services/summary-model-generator';\n/**\n * Summary Action controller.\n */\n\nvar Aggregate =\n/** @class */\nfunction () {\n  function Aggregate(parent, locator) {\n    this.parent = parent;\n    this.locator = locator;\n    this.addEventListener();\n  }\n\n  Aggregate.prototype.getModuleName = function () {\n    return 'aggregate';\n  };\n\n  Aggregate.prototype.initiateRender = function () {\n    var _this = this;\n\n    var cellFac = this.locator.getService('cellRendererFactory');\n    var instance = new SummaryCellRenderer(this.parent, this.locator);\n    [CellType.Summary, CellType.CaptionSummary, CellType.GroupSummary].forEach(function (type) {\n      return cellFac.addCellRenderer(type, instance);\n    });\n    this.footerRenderer = new FooterRenderer(this.parent, this.locator);\n    this.footerRenderer.renderPanel();\n    this.footerRenderer.renderTable();\n    this.locator.register('footerRenderer', this.footerRenderer);\n\n    var fn = function () {\n      _this.prepareSummaryInfo();\n\n      _this.parent.off(dataReady, fn);\n    };\n\n    this.parent.on(dataReady, fn, this);\n    this.parent.on(dataReady, this.footerRenderer.refresh, this.footerRenderer);\n  };\n\n  Aggregate.prototype.prepareSummaryInfo = function () {\n    var _this = this;\n\n    summaryIterator(this.parent.aggregates, function (column) {\n      var dataColumn = _this.parent.getColumnByField(column.field) || {};\n      var type = dataColumn.type;\n      var cFormat = 'customFormat';\n\n      if (!isNullOrUndefined(column[cFormat])) {\n        column.setPropertiesSilent({\n          format: column[cFormat]\n        });\n      }\n\n      column.setPropertiesSilent({\n        format: _this.getFormatFromType(column.format, type)\n      });\n      column.setFormatter(_this.parent.locale);\n      column.setPropertiesSilent({\n        columnName: column.columnName || column.field\n      });\n    });\n  };\n\n  Aggregate.prototype.getFormatFromType = function (format, type) {\n    if (isNullOrUndefined(type) || typeof format !== 'string') {\n      return format;\n    }\n\n    var obj;\n\n    switch (type) {\n      case 'number':\n        obj = {\n          format: format\n        };\n        break;\n\n      case 'date':\n        obj = {\n          type: type,\n          skeleton: format\n        };\n        break;\n\n      case 'datetime':\n        obj = {\n          type: 'dateTime',\n          skeleton: format\n        };\n        break;\n    }\n\n    return obj;\n  };\n\n  Aggregate.prototype.onPropertyChanged = function (e) {\n    if (e.module !== this.getModuleName()) {\n      return;\n    }\n\n    if (isNullOrUndefined(this.footerRenderer)) {\n      this.initiateRender();\n    }\n\n    this.prepareSummaryInfo();\n    this.footerRenderer.refresh();\n    var cModel = new CaptionSummaryModelGenerator(this.parent);\n    var gModel = new GroupSummaryModelGenerator(this.parent);\n\n    if (gModel.getData().length !== 0 || !cModel.isEmpty()) {\n      this.parent.notify(modelChanged, {});\n    }\n  };\n\n  Aggregate.prototype.addEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.parent.on(initialEnd, this.initiateRender, this);\n    this.parent.on(uiUpdate, this.onPropertyChanged, this);\n    this.parent.on(refreshAggregates, this.refresh, this);\n  };\n\n  Aggregate.prototype.removeEventListener = function () {\n    if (this.parent.isDestroyed) {\n      return;\n    }\n\n    this.footerRenderer.removeEventListener();\n    this.parent.off(initialEnd, this.initiateRender);\n    this.parent.off(dataReady, this.footerRenderer.refresh);\n    this.parent.off(uiUpdate, this.onPropertyChanged);\n    this.parent.off(refreshAggregates, this.refresh);\n  };\n\n  Aggregate.prototype.destroy = function () {\n    this.removeEventListener();\n    remove(this.parent.element.querySelector('.e-gridfooter'));\n  };\n\n  Aggregate.prototype.refresh = function (data) {\n    var editedData = data instanceof Array ? data : [data];\n    this.parent.notify(refreshFooterRenderer, editedData);\n\n    if (this.parent.groupSettings.columns.length > 0) {\n      this.parent.notify(groupAggregates, editedData);\n    }\n  };\n\n  return Aggregate;\n}();\n\nexport { Aggregate };\n/**\n * @private\n */\n\nexport function summaryIterator(aggregates, callback) {\n  aggregates.forEach(function (row) {\n    row.columns.forEach(function (column) {\n      callback(column, row);\n    });\n  });\n}","map":null,"metadata":{},"sourceType":"module"}